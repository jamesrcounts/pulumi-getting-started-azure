name: 1.0.$(Rev:r)

trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - 'pulumi-private-backend/stack'

pr:
  - main
  - development

variables:
  - group: pulumi-azure-backend
  - name: azure-subscription
    value: 'Azure - Personal'
  - name: stack-name
    value: 'azcs-privatebackend-dev'
  - name: working-directory
    value: 'pulumi-private-backend/stack'

pool:
  vmImage: 'ubuntu-latest'

steps:
  - checkout: self
    fetchDepth: 1

  - task: AzureCLI@2
    displayName: 'Generate Storage Key'
    inputs:
      azureSubscription: 'Azure - Personal'
      scriptType: 'bash'
      scriptLocation: 'scriptPath'
      scriptPath: '$(working-directory)/scripts/generate-storage-keys.sh'
      failOnStandardError: true

  - task: Bash@3
    displayName: 'Pulumi Run'
    env:
      AZURE_STORAGE_SAS_TOKEN: $(STORAGE_KEY)
    inputs:
      targetType: 'inline'
      script: |
        set -e -x

        # Download and install pulumi
        curl -fsSL https://get.pulumi.com/ | bash 
        export PATH=$HOME/.pulumi/bin:$PATH

        # Login into pulumi. This will require the AZURE_STORAGE_ACCOUNT
        # environment variable.
        pulumi login -c azblob://${AZURE_STORAGE_CONTAINER} -v 3

        pulumi stack select $(stack-name) -v 3
      failOnStderr: false

  - task: Pulumi@1
    displayName: 'Preview Infrastructure Changes'
    condition: and(succeeded(), or(eq(variables['Build.Reason'], 'PullRequest'), and(eq(variables['Build.Reason'], 'Manual'), ne(variables['manual-deploy'], true))))
    env:
      AZURE_STORAGE_SAS_TOKEN: '$(STORAGE_KEY)'
    inputs:
      azureSubscription: '$(azure-subscription)'
      command: 'preview'
      args: '--diff --refresh --non-interactive $(AZURE_STORAGE_SAS_TOKEN)'
      cwd: '$(working-directory)'
      stack: '$(stack-name)'
      createStack: true

  - task: Pulumi@1
    displayName: 'Deploy Infrastructure Changes'
    condition: and(succeeded(), or(or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'BatchedCI')),and(eq(variables['Build.Reason'], 'Manual'),eq(variables['manual-deploy'], true))))
    inputs:
      azureSubscription: '$(azure-subscription)'
      command: 'up'
      args: '--yes --diff --refresh --non-interactive --skip-preview'
      cwd: '$(working-directory)'
      stack: '$(stack-name)'
      createStack: true
